{"componentChunkName":"component---src-pages-search-js","path":"/search/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"rawMarkdownBody":"\r\nLatex 문법으로 수식 표현을 간단하게 할 수 있는 플러그인으로 Katex, MathJax 두 가지가 있는데,  \r\n\r\nMathJax는 dependency도 많고 Katex가 렌더링이 체감될 정도로 빠르므로 Katex 플러그인으로 수식표기를 하기로 결정했다.\r\n\r\n \r\n\r\nKatex 플러그인을 Gatsby 블로그에 적용하기 위해서 우선,  \r\n\r\n`$ npm install --save gatsby-remark-katex katex`  \r\n또는  \r\n`$ yarn add gatsby-remark-katex katex`  \r\n을 통해 katex를 설치해준다.  \r\n\r\nKatex 플러그인을 사용하기 위해 __gatsby-transformer-remark__ 플러그인이 필요한데, 마크다운 설정이 미리 되어있다면 이미 설치되어있을 수 있다.  \r\n\r\n\r\n###gatsby-config.js\r\n```js\r\nmodule.exports = {\r\n  // \r\n  plugins: [\r\n    \r\n    {\r\n      resolve: `gatsby-transformer-remark`,\r\n      options: {\r\n        plugins: [\r\n          \r\n          {\r\n            resolve: `gatsby-remark-katex`,\r\n            options: {\r\n              // Add any KaTeX options from https://github.com/KaTeX/KaTeX/blob/master/docs/options.md here\r\n              strict: `ignore`,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    \r\n  ],\r\n}\r\n```\r\n__gatsby-transformer-remark__ 안에 __gatsby-remark-katex__이 들어가는 꼴로 작성해야 한다.\r\n\r\n\r\n***\r\n\r\n\r\n[공식문서](https://www.gatsbyjs.org/packages/gatsby-remark-katex)에   \r\n\r\nAdd Katex CSS to your template: Katex’s CSS file is required to render the formulas correctly. \r\nInclude the CSS file in your template (example):\r\n\r\n``require(`katex/dist/katex.min.css`)``  \r\n\r\n__katex.min.css__를 참조할 수 있도록 조치하라고 되어있는데,  \r\n\r\nblog post를 띄우는 __src/templates/(포스트 관련.js)__ 파일 안에\r\n\r\n나의 경우에는 `import '../../../node_modules/katex/dist/katex.min.css';`를 추가하여 해결하였다.\r\n\r\n\r\n***\r\n\r\n이제 Katex가 적용된다.\r\n\r\n'$' 문자 하나 사이에 표현하는 inline,\r\n두개 사이에 표현하는 block 방식으로 사용할 수 있다.\r\n\r\n`$a^2 + b^2 = c^2$ 인라인`  \r\n\r\n$a^2 + b^2 = c^2$ 인라인\r\n\r\n```\r\n$$\r\na^2 + b^2 = c^2  \r\na^2 + b^2 = c^2  \r\na^2 + b^2 = c^2  \r\n$$ 블록\r\n```\r\n$$\r\na^2 + b^2 = c^2   \r\na^2 + b^2 = c^2  \r\na^2 + b^2 = c^2  \r\n$$ 블록\r\n\r\n","fields":{"slug":"/Gatsby 블로그 수식 표현 플러그인 Katex 적용법/"},"frontmatter":{"title":"Gatsby 블로그 수식 표현 플러그인 Katex 적용법","published":true}}},{"node":{"rawMarkdownBody":"\r\n#01 정보보호관리의 개념\r\n\r\n##1. 정보화 사회의 정보보호\r\n\r\n###(1) 정보사회의 특성과 정보화 역기능\r\n\r\n####1) 정보사회의 특성\r\n 초고속 정보통신 기반구조, 인터넷의 확산과 전자상거래, 사회 모습은 변화, 다양한 특성  \r\n 재택근무가 증가, 홈뱅킹이나 사이버 주식거래   \r\n 미래전쟁 양상으로 떠오르는 정보전쟁, 자동화된 지휘통제시스템과 해커 * 바이러스를 이용하는 사이버 전쟁 개념  \r\n\r\n●\t사이버환경의 특징\r\n-\t비대면성\r\n-\t익명성\r\n-\t시간 및 공간적 운영의 무제한성\r\n-\t무제한적인 정보 및 신속한 전송\r\n-\t미래의 범죄 및 전쟁 공간\r\n\r\n####2) 정보화 역기능\r\n 역기능적인 문제점 또한 갈수록 심각  \r\n 개인의 프라이버시 침해, 해커와 바이러스의 기승, 불법적인 위 * 변조를 통한 각종 컴퓨터 범죄행위, 정보시스템의 파괴에 의한 사회마비 등  \r\n 모바일 환경에서의 정보보호, 중요정보의 노출과 프라이버시 침해 등  \r\n\r\n●\t최근 사이버공격의 특징\r\n-\t공격 기술의 지능화 및 고도화\r\n-\t사이버 공격 전파경로의 다원화\r\n-\t사이버 공격의 초고속화 및 초단기화\r\n-\t사이버 공격의 분산화 및 에이전트화\r\n\r\n\r\n###(2) 정보보호(Information Security)\r\n\r\n####1) 정의 \r\n [정보의 수집, 가공, 저장, 검색, 송신, 수신 중에 발생하는 정보의 훼손, 변조, 유출 등을 방지하기 위한 관리적, 기술적 수단, 또는 그러한 수단으로 이루어지는 행위]  \r\n 정보보호 : [기밀성, 무결성, 가용성, 인증성 및 부인방지를 보장하기 위하여 기술적 * 물리적 * 관리적 보호대책을 강구하는 것]   \r\n\r\n####2) 정보의 가용성과 안정성(보안성)\r\n 정보의 가용성과 보안 측면에서 정보보호 : [정보의 활용과 정보의 통제 사이에서 균형감각을 갖는 행위]  \r\n 가용성을 극대화, 정보의 통제는 위협 요소를 줄이고 안정성을 확보  \r\n\r\n●\t가장 쉬운 침투방법 선택 원리(principle of easiest penetration)\r\n-\t침입자는 이용 가능한 모든 침투수단을 이용할 것이다. 침투는 가장 분명한 수단을 이용하여 일어나는 것이 아니고, 침투에 대한 강력한 대비책이 마련되어 있다면 일반적으로 쉽게 이루어지지 않을 것이다. \r\n\r\n●\tNIST의 컴퓨터 보안 정의\r\n-\t정보시스템 자원(하드웨어, 소프트웨어, 펌웨어, 정보/데이터, 통신)의 무결성, 가용성, 기밀성을 보전하고자 하는 목표 달성을 위해 자동화된 정보시스템에 제공하는 보호(컴퓨터 보안에 있어서 가장 핵심이 되는 3가지 주요 목표 제시)\r\n\r\n\r\n####3) 정보보호의 목표\r\n(가) 기밀성(Confidentiality)  \r\n직 인가된(authorized) 사람, 인가된 프로세스, 인가된 시스템만이 알 필요성(Need-to-know)에 근거하여 시스템에 접근해야 한다는 원칙  \r\n데이터 처리의 모든 접속점에서 필요한 수준의 비밀 엄수(secrecy)가 강제, 정보 유출을 예방  \r\n접근 제어, 암호화  \r\n\r\n(나) 무결성(Integrity)  \r\n네트워크를 통하여 송수신되는 정보의 내용이 불법적으로 생성 또는 변경되거나 삭제되지 않도록 보호  \r\n전력차단과 같은 시스템 중단 경우에도 위반 가능  \r\n접근 제어, 메시지 인증 등으로 보장, 침입 탐지, 백업 등으로 예방\r\n\r\n(다) 가용성(Availability)  \r\n시스템이 지체 없이 동작, 합법적 사용자가 서비스 사용  \r\n정보의 비가용성 해로움  \r\n데이터의 백업, 중복성의 유지, 물리적 위협요소로부터의 보호 등  \r\n\r\n(라) 인증성(인증, Authenticity, Authentication)  \r\n진짜라는 성질을 확인할 수 있고, 확인 및 신뢰할 수 있다는 것, 출처 유효성에 대한 확신  \r\n\r\n(마) 책임추적성(책임성, Accountability)  \r\n개체의 행동을 유일하게 추적해서 찾아낼 수 있음  \r\n부인 봉쇄, 억제, 결함 분리, 침입 탐지 예방, 사후 복구와 법적인 조치 등  \r\n보안 침해에 대한 책임이 있는 곳까지 추적  \r\n시스템은 활동 상황을 기록, 포렌식(forensic) 분석을 하여 보안 침해를 추적하여 전송 관련 분쟁 해결\r\n\r\n●\tCIA Triad(삼각형)\r\n-\t1. 가용성\r\n-\t2. 무결성\r\n-\t3. 기밀성  \r\n●\t정보를 안전하게 보호하기 위해서는 비인가된 접근으로부터 안전하고(기밀성), 비인가된 변경으로부터 보호되어야 하며(무결성), 필요할 때 권한이 있는 사용자가 이용할 수 있어야 한다(가용성).\r\n\r\n●\t추가 정보보호 목표\r\n-\tCIA Triad를 사용해서 보안 목적을 잘 정의했지만, 보안 목적을 완성되게 표현하려면 보안 실무 필드에서 필요한 개념을 추가해야만 한다. 그 중에서 가장 많이 언급되는 개념은 인증성, 책임추적성이다.\r\n\r\n●\t부인 봉쇄(부인방지)\r\n-\t메시지의 송수신이나 교환 후, 또는 통신이나 처리가 실행된 후에 그 사실을 사후에 증명함으로써 사실 부인을 방지하는 보안 기술\r\n\r\n\r\n##2. 정보보호 관리\r\n\r\n###1) 정보보호 관리(Information Security Management)의 개념\r\n\r\n●\t정보보호와 정보보호 관리 시스템\r\n-\t정보보호 : 정보의 수집/가공/저장/검색/송신/수신 중에 발생하는 정보의 훼손/변조/유출 등을 방지하기 위한 관리적/기술적 수단, 또는 그러한 수단으로 이루어지는 행위. \r\n-\t정보보호 관리 시스템 : 정보통신 서비스 제공자가 정보통신망의 안정성 및 신뢰성을 확보하여 정보자산의 기밀성, 무결성, 가용성을 실현하기 위한 관리적 * 기술적 수단과 절차 및 과정을 체계적으로 관리, 운영하는 체계. 2010년부터 행정 기관은 정보보호관리 시스템(ISMS) 인증을 의무적으로 받아야 한다. \r\n\r\n\r\n###2)  정보보호 관리와 정보보호 대책\r\n(가) 개요\r\n1.\t정보보호 관리는 기술적 보호대책, 물리적 보호대책, 관리적 보호대책으로 계층적 구분  \r\n\r\n \r\n(나) 기술적 보호대책  \r\n가장 기본적인 대책  \r\n접근통제, 암호기술, 백업 체제, 정보시스템 자체에 보안성이 강화된 시스템 소프트웨어를 사용 등  \r\n\r\n(다) 물리적 보호대책  \r\n자연재해로부터 정보시스템이 위치한 정보처리시설을 보호  \r\n불순 세력이나 적의 파괴 대비한 출입통제, 시건(잠금) 장치 등  \r\n\r\n(라)  관리적 보호대책  \r\n법 * 제도 * 규정 * 교육 등, 보안계획을 수립(보안등급, 액세스 권한 등), 위험분석 및 보안감사  \r\n제도 * 정책 * 절차 등도 매우 중요  \r\n내부자의 부당행위를 방지하기 위한 교육  \r\n\r\n\r\n●\t기술적 보호대책 : 접근 통제, 암호 기술, 백업 체제 등  \r\n●\t물리적 보호대책 : 화재, 수해, 지진, 태풍 등  \r\n●\t관리적 보호대책 : 법 * 제도 * 규정 *교육 등  \r\n\r\n●\t정보보호 관리는 기업과 조직의 비즈니스 목적을 충족시키면서 수용 가능한 수준으로 위험을 낮추는 것  \r\n●\t위험은 제거대상이 아닌 관리대상  \r\n●\t위험은 식별되거나 감소될 수 있지만 제거될 수는 없음  \r\n●\t정보보호 관리를 위해서는 최고 경영진의 지원과 관심이 반드시 필요  \r\n\r\n\r\n##3. OSI 보안 구조\r\n\r\n###(1) 개요\r\n####1) 기본 개념\r\n ITU-T 권고안 X.800, OSI 보안 구조 : 관리자가 효과적으로 보안 문제를 조직화 하는데에 유용  \r\n●\t보안 공격(Security attack) : 기관이 소유한 정보의 안전성을 침해하는 제반 행위.  \r\n●\t보안 메커니즘(Security mechanism) : 보안 공격을 탐지, 예방하거나 공격으로 인한 침해를 복구하는 절차.  \r\n●\t보안 서비스(Security service) : 조직의 정보 전송과 데이터 처리 시스템의 보안을 강화하기 위한 처리 또는 통신 서비스. 이 서비스는 보안 공격에 대응하기 위한 것이며, 하나 또는 그 이상의 보안 메커니즘을 사용하여 서비스를 제공한다.   \r\n\r\n●\t공격 : 지적인 위협을 수반하는 시스템 보안에 대한 침범을 말한다. 여기서 지적인 위협이란 보안서비스를 교묘히 피하거나 시스템 보안 정책을 위반하는 정교한 시도(특히 방법과 기술 측면에서)를 말한다.  \r\n\r\n###(2) 보안 공격(Security attack)\r\n\r\n####1) 개요\r\n보안의 세 가지 목표(기밀성, 무결성, 가용성)는 보안 공격에 의해 위협  \r\n보안 목표에 관련하여 세 개의 그룹, 공격을 시스템에 미치는 영향에 따라 두 개의 유형  \r\n\r\n●\tOSI 보안 구조는 보안 공격과 보안 기법, 보안 서비스를 체계적으로 정의할 수 있는 틀을 제공한다.   \r\n●\t보안 공격은 소극적 공격과 적극적 공격으로 분류할 수 있다. 소극적 공격에는 파일이나 메시지를 불법적으로 읽거나, 트래픽을 분석하는 것이 포함되고, 적극적 공격에는 파일이나 메시지를 수정하거나, 서비스 거부 공격 등이 포함된다.   \r\n\r\n####2) 기밀성을 위협하는 공격\r\n(가) 스누핑(Snooping)  \r\n데이터에 대한 비인가 접근 또는 탈취  \r\n\r\n(나) 트래픽분석(Traffic Analysis)  \r\n온라인 트래픽을 분석함으로써 다른 형태의 정보 얻기 가능  \r\nex) 전송의 성향을 추측하는데 도움이 되는 질의와 응답의 쌍을 수집  \r\n\r\n####3) 무결성을 위협하는 공격\r\n(가) 변경(메시지 수정, Modification)  \r\n적법한 메시지의 일부를 불법으로 수정하거나 메시지 전송을 지연시키거나 순서를 뒤바꾸어 인가되지 않은 효과를 노리는 행위  \r\n\r\n(나) 가장(Masquerading)  \r\n신분위장은 한 개체가 다른 개체의 행세, 다른 형태의 적극적 공격과 병행해서 수행  \r\n\r\n(다) 재연(재전송, Replaying)  \r\n적극적 공격의 하나로, 획득한 데이터 단위를 보관하고 있다가 시간이 경과한 후에 재전송  \r\n인가되지 않은 사항에 접근하는 효과를 노리는 행위  \r\n\r\n(라) 부인(Repudiation)  \r\n자신이 메시지를 보냈다는 것을 부인 또는 메시지를 받았다는 것을 부인  \r\n부인방지(부인 봉쇄, Nonrepudiation)  \r\n●\t부인 봉쇄란 송신자나 수신자 양측이 메시지를 전송했거나 수신한 사실 자체를 부인하지 못하도록 막는 것을 말한다. \r\n\r\n####4) 가용성을 위협하는 공격\r\n(가) 서비스 거부(Denial of Service)  \r\n시스템의 서비스를 느리게 하거나 완전히 차단  \r\n\r\n●\t공격의 발원지에 따른 구분\r\n-\t내부 공격 : 보안 경계 내부의 존재에서 시작된 공격, 내부자에게 시스템 자원접근은 허가되나 허용된 권한 이상으로 사용할 때 발생\r\n-\t외부 공격 : 보안 경계 외부에서 허가되지 않은 불법적인 사용자에 의해 시작된 공격, 공격자는 인터넷상의 아마추어부터 조직화된 범죄자, 국제 테러리스트, 적국의 정부 등일 수 있다.  \r\n\r\n\r\n####5) 소극적 공격과 적극적 공격\r\n (가) 개요  \r\n보안 공격(Security attack)을 X.800과 RFC 2828에 따라 분류하면 소극적 공격(passive attack)과 적극적 공격(active attack)으로 나눔  \r\n\r\n| Attack | Passive/Active | Threatening |\r\n|:--------:|:--------:|:--------:|\r\n| Snooping, Traffic analysis | Passive | Confidentiality |\r\n| Modification, Masquerading, Replaying, Repudiation | Active | Integrity |\r\n| Denial of Service | Active | Availability |\r\n\r\n(나) 소극적 공격(수동적 공격, Passive Attack)  \r\n목표는 단지 정보를 획득, 공격자가 데이터를 변경하거나 시스템에 해를 끼치지 않는다는 것    \r\n송신자나 수신자는 제3자가 메시지 패턴을 관찰하는지 알 수 없음. 따라서, 탐지보다 예방  \r\n\r\n(다) 적극적 공격(능동적 공격, Active Attack)  \r\n데이터를 바꾸거나 시스템에 해를 입힘, 결성과 가용성을 위협하는 공격  \r\n공격자가 다양한 방법을 사용하기 때문에 일반적으로 방어하기보다 탐지  \r\n치명적인 공격의 대부분  \r\n대부분의 능동적 공격은 상당 기간 동안의 수동적 공격 수행을 통해 수집된 정보를 바탕  \r\n\r\n●\tNIST의 정보보호 핵심 5원칙\r\n-\t1. 가용성\r\n-\t2. 무결성\r\n-\t3. 기밀성\r\n-\t4. 책임추적성(Accountability)\r\n-\t5. 보증(Assurance)\r\n\r\n##4. 기본 보안용어 정의\r\n####1) 자산(Asset)\r\n조직이 보호해야 할 대상으로서 데이터 혹은 자산 소유자(Data Owner)가 가치를 부여한 실체  \r\n\r\n####2) 취약점(취약성, Vulnerability)\r\n컴퓨터나 네트워크에 침입하여 환경 내의 리소스에 대한 허가되지 않은 접근을 시도하려는 공격자에게 열린 문을 제공할 수 있는 소프트웨어, 하드웨어, 절차 혹은 인력상의 약점을 가리킨다. 즉, 위협의 이용대상으로 관리적, 물리적, 기술적 약점  \r\n\r\n####3) 위협(Threat) : 위협은 취약성 제어수단에 의하여 차단된다.\r\n손실이나 손상의 원인이 될 가능성을 제공하는 환경의 집합  \r\n보안에 해를 끼치는 행동이나 사건  \r\n●\t가로채기(interception) : 비인가된 당사자가 자산으로의 접근을 획득한 것을 의미(불법 복사, 도청  등)  => __기밀성__에 영향   \r\n●\t가로막음(interruption) : 시스템 자산은 손실되거나, 손에 넣을 수 없거나, 사용불가능하게 됨(하드웨어 장치의 악의적 파괴, 파일 삭제, 서비스 거부 등) => __가용성__에 영향     \r\n●\t변조(modification) : 비인가된 당사자가 접근하여 그 내용을 변경(데이터베이스 특정값 변경, 특정 프로그램 변경 등) => __무결성__에 영향  \r\n●\t위조(fabrication) : 비인가된 당사자가 컴퓨팅 시스템상에 불법 객체의 위조 정보를 생성(네트워크 통신에 가짜 거래 정보 만듦 등) => __무결성__에 영향  \r\n\r\n| 분류 | 내용 |\r\n| :--------: | :--------: | \r\n| __자연에 의한 위협__ | 화재, 홍수, 지진, 전력 차단 등 자연에 의한 대표적인 위협으로부터 발생하는 재난을 항상 예방할 수는 없지만 화재경보기, 온도계, 무정전 시스템 등을 설치하여 피해를 최소화할 수 있다. |\r\n| __인간에 의한 위협__ | __비의도적 위협__ : 정보시스템의 보안 사고를 일으키는 가장 큰 위협으로 인간의 실수와 태만이 주된 원인이다. 패스워드의 공유, 데이터에 대한 백업의 부재 등이 대표적인 부주의와 태만으로 간주되며, 이러한 위협은 언론매체에서 크게 다루어지지는 않지만 실제로는 정보보호 문제를 일으키는 가장 중요한 요인이다. |  \r\n| __인간에 의한 위협__ | __의도적 위협__ : 컴퓨터 바이러스, 해커, 사이버 테러리스트 등으로부터 발생하며 도청, 신분위장에 의한 불법 접근, 정당한 정보에 대한 부인, 악의적인 시스템 장애 유발 등이 있다. |\r\n\r\n\r\n####4) 위협주체(위협원, Threat agents)\r\n취약점을 이용하는 존재는 위협 주체(threat agent)  \r\n침입차단시스템의 포트를 통해 네트워크에 접근하는 침입자, 보안 정책을 위반하는 방식으로 데이터에 접근하는 프로세스, 시설물을 파괴하는 태풍, 혹은 의도하지 않은 실수로 기밀 정보를 누설하거나 파일의 무결성을 손상시키는 직원\r\n\r\n####5) 위험(Risk)\r\n위협 주체가 취약성을 활용할 수 있는 가능성과 그와 관련된 비즈니스 영향  \r\n위험은 [자산X위협X취약점]\r\n  \r\n####6) 노출(Exposure)\r\n위협 주체로 인해서 손실이 발생할 수 있는 경우  \r\n취약점은 조직에 있어서 가능한 피해를 노출  \r\n\r\n####7) 대책/안전장치(Countermeasure/Safeguard)\r\n잠재적 위험을 완화시키기 위해 배치  \r\n위험을 감소시키기 위한 소프트웨어 설정, 하드웨어 장비, 또는 절차  \r\n\r\n●\t취약성, 위협, 위험, 노출, 대책  \r\n-\t만약 기업이 백신 소프트웨어를 오직 서버에만 설치하고 바이러스 서명(Signature)을 최신으로 유지하지 않는다면 이는 취약성에 해당되며, 해당 기업은 바이러스 공격에 대하여 취약한 것이다. 위협은 해당 환경에서 발생하여 손해를 유발할 수 있는 가능성은 위험이다. 만약 바이러스가 기업의 환경에 침입한다면 취약성은 이용되었고 기업은 손실에 노출된다. 이 상황에 대한 대책은 바이러스 패턴 정보를 최신으로 갱신하여 백신 소프트웨어를 모든 컴퓨터에 설치하는 것이다. \r\n\r\n\r\n\r\n\r\n####8) 다계층 보안/심층 방어(Defense in Depth)\r\nMulti Layered(Level) Security, 여러 계층의 보안대책이나 대응수단을 구성  \r\n한 가지 통제가 대응에 실패하더라도 전체 시스템을 위험에 빠뜨리지 않음  \r\n가장 최선의 보안 접근 방법으로, 보호 * 탐지 * 대응으로 이루어진 보안 접근법  \r\n\r\n\r\n####9) 직무상의 신의성실, 노력(Due Care, Due Diligence)\r\nDue :  특정 목적을 위하여 필요하거나 요구되는 적절하고 충분한 의무이다.  \r\nDue care :  특정 목적을 위하여 필요하거나 요구되는 충분한 주의이다.  \r\nDue Diligence : 특정 목적을 위하여 필요하거나 요구되는 충분한 노력이다.  \r\n\r\n●\t심층 방어(Defense in Depth) : 다수의 통제를 구현함으로써 성공적 침투와 침해가 발생하는 것을 어렵게 만듦   \r\n●\t사회공학(Social Engineering) : 어떤 사람을 속임으로써 허가되지 않은 접근을 획득하는 것  \r\n  \r\n####10) 사회공학(Social Engineering)\r\n인간 상호 작용의 깊은 신뢰를 바탕으로 사람들을 속여 정상적인 보안 절차를 깨트리기 위한 침입 수단  \r\n\r\n●\t가장 약한 링크 원칙(principle of weakness link)  \r\n-\t보안은 가장 약한 링크보다 더 강할 수 없다. 방화벽에 전력을 공급하는 전원장치이건, 보안 응용 기반으로 동작하는 운영체제이건, 또는 제어수단을 기획 * 실현하고 관리하는 사람들이건 간에 어떤 하나의 제어수단의 실패가 전체 보안실패를 야기한다.  \r\n\r\n●\t보안은 비대칭성(Asymmetrical) : 방어측은 모든 취약점을 알아내야 하지만, 공격자는 하나의 취약점이라도 발견하면 됨.  \r\n\r\n\r\n####11) 시점별 통제(Control)\r\n예방통제(Preventive Control) : 사전에 위협과 취약점에 대처하는 통제\r\n탐지통제(Detective Control) : 위협을 탐지하는 통제로, 빠르게 탐지할수록 대처하기 용이\r\n교정통제(Corrective Control) : 이미 탐지된 위협이나 취약점에 대처하거나, 위협이나 취약점을 감소시키는 통제\r\n\r\n| 구분 | 설명 |\r\n| :--------: | :--------: | \r\n| 공격자 | 시스템을 공격하거나 위협하는 존재 |\r\n| 공격 | 시스템의 보안 서비스를 회피하여 보안 정책을 위반하려는 의도된 시도 | \r\n| 대응 | 피해의 최소화 및 적절한 대응을 위해 탐지, 보고하여 위험, 노출, 공격을 제거하거나 방지하는 행위, 장비, 기법 |\r\n| 위험 | 특정 위협이 가져올 피해가 확률적으로 표현되는 예상 손실 |\r\n| 보안 정책 | 시스템이나 기관이 민감하고 중요한 시스템 자원에 보안 서비스를 제공하기 위해 명시한 규정과 업무 |\r\n| 자산 | 정보 시스템 내의 데이터, 시스템의 서비스, 처리 기능, 통신 대역폭, 시스템 장비(하드웨어, 펌웨어, 소프트웨어, 문서), 시스템 장비 설비 |\r\n| 위협 | 보안을 침해하고 손해를 가져올 수 있는 상황, 행위, 이벤트가 존재할 때의 잠재적 보안 위반 |\r\n| 취약점 | 시스템 보안 정책을 위반할 수 있는 시스템 설계, 구현, 혹은 운영, 관리상의 오류 및 약점 |\r\n","fields":{"slug":"/정보보안기사 1장/"},"frontmatter":{"title":"정보보안기사 1장","published":true}}},{"node":{"rawMarkdownBody":"\r\n#커널 소스 구하기\r\n\r\n[http://www.kernel.org](http://www.kernel.org)\r\n\r\n\r\n[https://github.com/torvalds/linux](https://github.com/torvalds/linux)\r\n\r\n\r\n\r\n#커널 소스 설치\r\n\r\nbzip2 형식 압축 해제  \r\n`$ tar xvjf linux-x.y.z.tar.bz2`  \r\n\r\n\r\nGNU zip 형식 압축 해제  \r\n`$ tar xvzf linux-x.y.z.tar.gz`  \r\n\r\n\r\n* 커널 소스는 보통 /usr/src/linux에 설치된다. 여기 접근하려면 루트 권한 필요, 새 커널 설치 시에만 루트 권한 사용하여 접근하고 그때에도 이 디렉토리 내용은 건드리면 안된다.\r\n\r\n\r\n\r\n#패치\r\n\r\n점증적 패치를 적용하려면,   \r\n`$ patch -p1 < ../patch-x.y.z`  \r\n\r\n\r\n#커널 소스 트리\r\n\r\n| 디렉토리 | 설명 |\r\n| :-------- | :-------- |\r\n| arch | 특정 아키텍처와 관련된 소스 |\r\n| block | 블록 입출력 계층 |\r\n| crypto | 암호화 API |\r\n| Documentation | 커널 소스 문서 |\r\n| drivers | 장치 드라이버 |\r\n| firmware | 특정 드라이버를 사용할 때 필요한 장치 펌웨어 |\r\n| fs | 가상 파일시스템 및 개별 파일시스템 |\r\n| include | 커널 헤더 파일 |\r\n| init | 커널 시작 및 초기화 관련 코드 |\r\n| ipc | 프로세스 간 통신 관련 코드 |\r\n| kernel | 스케줄러와 같은 핵심 커널 서브시스템 |\r\n| lib | 유틸리티 루틴 |\r\n| mm | 메모리 관리 서브시스템 및 가상 메모리 |\r\n| net | 네트워크 서브시스템 |\r\n| samples | 예제, 데모 코드 |\r\n| scripts | 커널을 빌드하는 데 사용하는 스크립트 | \r\n| security | 리눅스 보안 모듈 |\r\n| sound | 사운드 서브시스템 |\r\n| usr | 초기 사용자 공간 코드 initramfs |\r\n| tools | 리눅스 개발에 유용한 도구 |\r\n| virt | 가상화 기반 구조 |\r\n\r\n* 소스트리 최상위에 있는 파일 : COPYING 파일은 커널 저작권 파일, CREDITS 파일에는 커널 개발 기여 개발자 명단, MAINTAINERS 파일에는 커널 서브시스템과 드라이버를 관리하는 사람들 명단, Makefile은 커널의 기본 __Makefile__\r\n\r\n\r\n#커널 설정\r\n\r\n커널 설정 옵션은 __CONFIG__으로 시작하는 CONFIG_FEATURE과 같은 형태\r\ne.g) CONFIG_SMP : SMP 지원 여부\r\n\r\n두가지 혹은 세가지 설정 값(보통 드라이버의 경우 세 가지 선택이 가능)을 지님.\r\n\r\n__yes__ or __no__ (or __module__)\r\n\r\n__module__ 값을 가지는 경우 해당 기능은 모듈 형태(동적으로 로드할 수 있는 별도 오브젝트)로 컴파일된다.\r\n\r\n\r\n\r\n","fields":{"slug":"/리눅스 커널 (2)/"},"frontmatter":{"title":"리눅스 커널 (2)","published":true}}},{"node":{"rawMarkdownBody":"\r\n##1. 암호학의 기본개념\r\n\r\n###1) 암호학(Cryptology)의 정의\r\n\r\n1. 암호 : 약속된 당사자나 집단에서만 내포된 내용을 알 수 있게하는 일종의 문서\r\n2. 암호학 : 암호 기술과 암호해독에 관하여 연구하는 학문 \r\n\r\n\r\n###2) 암호학에서 사용하는 이름\r\n\r\n1. 앨리스(Alice), 밥(Bob) : 메시지 송수신 주체\r\n2. 이브(Eve) : 도청자(eavesdropper), 소극적 공격자\r\n3. 맬로리(Mallory) : 악의적인(malicious) 공격자\r\n4. 트렌트(Trent) : 신뢰할 수 있는 중재자(trusted arbitrator)\r\n5. 빅터(Victor) : verifier, 검증인\r\n\r\n\r\n###3) 송신자, 수신자, 도청자\r\n\r\n1. 송신자(sender), 수신자(receiver), 메시지(message)\r\n2. 사람 이름이 사람이 아닌 기계나 프로그램일 수도 있다.\r\n\r\n###4) 암호화와 복호화\r\n\r\n1. 평문(plaintext) : 암호화하기 전 메시지  \r\n   암호문(ciphertext) : 암호화한 메시지 \r\n2. 암호(cryptography) 기술로 기밀성(confidentiality) 유지\r\n\r\n\r\n###5) 암호화와 복호화의 기호적 표현\r\n\r\n1. 주로, \r\n \r\n   평문 : P  \r\n   암호문 : C  \r\n   암호 알고리즘 : E  \r\n   복호화 알고리즘 : D  \r\n   키 : K\r\n\r\n   * 키 스페이스 : 사용하는 키 값의 크기(size)  \r\n\r\n\r\n - $C = E_{k}(P)$ : 평문 P를 키 K로 암호화(E)하여 암호문 C\r\n - $P = D_{k}(C)$ : 암호문 C를 키 K로 복호화(D)하여 평문 P\r\n\r\n2. 또는 $C = E(K,P)$, $P = D(K,C)$로 표현\r\n\r\n* 암호시스템(Cryptosystem) : 암호화와 복호화를 수행하는 시스템\r\n\r\n###6) 암호 알고리즘과 키의 분리\r\n\r\n암호 알고리즘은 반복하고 키만 바꾸어 사용\r\n\r\n\r\n###7) 암호와 보안 상식\r\n\r\n(가) 비밀 암호 알고리즘 사용하지 말 것  \r\n","fields":{"slug":"/정보보안기사 2장 - (1) 암호학 개요/"},"frontmatter":{"title":"정보보안기사 2장 - (1) 암호학 개요","published":true}}},{"node":{"rawMarkdownBody":"\r\nnpm 설치를 위해 node.js 설치하는 과정에서 \r\n\r\n__C:\\Users\\\\(계정이름)\\AppData\\Roaming\\npm-cache\\\\_libvips__ 의\r\n\r\n__libvips-8.7.4-win32-x64.tar.gz__ 파일이 누락됨.   \r\n(__libvips-8.8.1-win32-x64.tar.gz__을 포함한 다른 버전도 동일.)\r\n\r\n네트워크 문제로 파일을 가져오는데에서 문제가 생긴 것으로 보임.\r\n\r\ngithub realese 페이지에서 직접 받아도 다운링크에 접속을 못하여\r\n\r\n구글링을 통해 libvips 압축파일을 정리해둔 링크를 찾아서 해결.  [http://18.176.30.221/list/libvips](http://18.176.30.221/list/libvips)\r\n\r\n\r\n이를 통해 npm install 명령 실행 도중 getaddrinfo EFNOTFOUND 오류가 나며\r\n\r\n링크에서 파일을 받지 못하는 경우 해결 할 수 있음. \r\n\r\n\r\n***\r\n\r\nnode-gyp 설치가 필요하다면,\r\n\r\n\r\n네이티브 애드온 모듈 컴파일링을 하는 __node-gyp__를 설치\r\n\r\n'node-gyp' is a cross-platform command-line tool written in Node.js for compiling native addon modules for Node.js\r\n\r\n\r\n`$ npm install -g node-gyp`\r\n\r\n\r\n***\r\n\r\n\r\nnode.js를 윈도우에 설치하고서 필수 요소(python2.7 등) 자동 설치를 위한 빌드 툴을 설치해야함.  \r\n`$ npm install --global --production windows-build-tools`\r\n\r\n이번 블로그 적용 중에는 이 것으로 해결이 안되고 아래와 같은 문제가 생김.\r\n\r\n\r\n***\r\n\r\nnode.js 설치 시 파이썬 등 필수 요소 자동설치를 해줘야하는데 \r\n\r\n실패하여 npm이 Python v2.7을 찾지 못하는 경우 \r\n \r\n기본경로인 __C:\\python27__ 경로로 파이썬2.7을 설치해준다.\r\n\r\n\r\n***\r\n\r\nvisual studio가 2019 버전이라 MSBuild.exe ENOENT 에러가 나는 경우, \r\n\r\n빌드를 위해 Visual C++ Build tools의 2015 또는 2017 버전이 필요한데\r\n\r\n따라서 설치해주면 해결된다. [Visual C++ Build tools 설치](https://go.microsoft.com/fwlink/?LinkId=691126)\r\n\r\nwindows 8.1 sdk만 설치해주면 되고,\r\n\r\n`$ npm config set python python2.7`  \r\n`$ npm config set msvs_version 2015`\r\n\r\n위와 같이 컨픽을 설정해주면 에러 없이 빌드된다.\r\n\r\n이번 경우 npm install 시 이 에러 발생.\r\n\r\n- 참고 : [https://github.com/nodejs/node-gyp/issues/1747](https://github.com/nodejs/node-gyp/issues/1747)\r\n\r\n\r\n***\r\n\r\n```\r\n> gatsby develop\r\n\r\nThe above error occurred in the <StoreStateProvider> component:\r\n    in StoreStateProvider\r\n    in App\r\n```\r\n\r\n위의 오류가 발생하는 경우  \r\n\r\nyarn 설치 후   \r\n\r\n`npm install --global yarn`  \r\n\r\ngatsby의 새 버전 재설치를 yarn으로 해주면  \r\n\r\n`yarn add gatsby`  \r\n\r\n\r\n다시 `gatsby develop`가 정상 작동한다.\r\n\r\n- 참고 : [https://github.com/gatsbyjs/gatsby/issues/19325#issuecomment-550977201](https://github.com/gatsbyjs/gatsby/issues/19325#issuecomment-550977201)\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n","fields":{"slug":"/Gatsby 블로그 적용 도중 만난 에러/"},"frontmatter":{"title":"Gatsby 블로그 적용 도중 만난 에러","published":true}}},{"node":{"rawMarkdownBody":"\r\n\r\n# 운영체제와 커널\r\n\r\n__운영체제__ : 정의 힘듬, but 기술적 관점 => 기본적인 사용과 관리 담당하는 시스템의 일부분\r\n - 커널, 장치 드라이버, 부트로더, 명령행 셸(동등 역할의 사용자 인터페이스 포함), 기본적인 파일 및 시스템 유틸리티 등  \r\n\r\n__시스템__ : 운영체제 + 그 위에서 동작하는 모든 애플리케이션 통틀음    \r\n\r\n__커널__ : (a.k.a 관리자supervisor, 코어core, 내부internals) \r\n - 인터럽트 핸들러, 스케줄러, 메모리 관리 시스템, 네트워크나 프로세스간 통신 처리하는 시스템 서비스 등     \r\n \r\n***\r\n \r\n__커널 공간__kernel-space : 보호 메모리 공간 사용, 제약 없는 하드웨어 접근 등이 가능  \r\n과  \r\n__사용자 공간__user-space :\r\n - 사용자 애플리케이션 실행됨/ 장비의 가용 자원 중 일부만 사용 가능 \r\n - 특정 시스템 함수 실행 가능, 하드웨어 직접 접근 및 커널이 할당한 영역 밖에 메모리 접근은 잘못된 동작  \r\n\r\n은 다른 (시스템)상태를 가짐     \r\n \r\n***\r\n\r\n\r\n커널 코드 실행 시 시스템은 커널 모드로 커널 공간에 있음  \r\n일반적인 프로세스 처리 시 시스템은 사용자 모드로 사용자 공간에 있음  \r\n\r\n실행 애플리케이션은 시스템 호출을 통해 커널과 통신  \r\n주로) 애플리케이션이 라이브러리 함수 호출 => 라이브러리가 시스템 호출 인터페이스 이용 커널이 애플리케이션을 대신해 필요한 작업 수행\r\n\r\n일부 라이브러리 호출은 시스템 호출에는 없는 여러 기능 제공하기도 함, 이 경우 커널 호출은 커다란 함수의 일부 한 단계가 됨     \r\n\r\n\r\nex) printf() : 데이터 출력 형식 지정 or 버퍼링 기능\r\n - 화면에 데이터 출력하기 위해 write() 시스템 호출 이용하는 것은 이 함수의 일부분\r\n\r\n일부 라이브러리 호출은 커널 호출과 일대일 대응\r\n\r\n한편, strcpy() 같은 C 라이브러리 함수는 커널 호출을 직접 사용하지 않음     \r\n\r\n\r\n\r\n* 애플리케이션이 시스템 호출을 실행하는 것을 애플리케이션을 대신에 커널이 실행 중이라고 표현\r\n* 또는 (= 애플리케이션이 커널 공간에서 시스템 호출을 실행 중 = 커널이 프로세스 컨텍스트를 실행 중)\r\n \r\n애플리케이션이 시스템 호출을 통해 커널을 이용하는 방식이 애플리케이션의 작업 수행의 기초적인 방식     \r\n\r\n***\r\n \r\n__커널은 시스템 하드웨어도 관리__ : 인터럽트 개념  \r\n__인터럽트__ : 종류는 숫자로 구분, 커널은 숫자로 인터럽트 처리, 응담할 인터럽트 핸들러 실행  \r\n - 커널이 동기화를 위해 새로운 인터럽트 블락 가능(모든 인터럽트 다 or 특정 인터럽트만)  \r\n - 리눅스 포함 대다수 운영체제 인터럽트 핸들러를 프로세스 컨텍스트에서 실행 안함  \r\n - 대신 프로세스와 분리되어 있는 별도의 인터럽트(전용) 컨텍스트에서 실행      \r\n \r\n \r\n \r\n컨텍스트는 커널의 활동 범주 나타냄  \r\n리눅스에서 프로세스는 세가지 중 한가지 일 하는 중\r\n - 사용자 공간에서 프로세스의 사용자 코드를 실행\r\n - 커널 공간의 프로세스 컨텍스트에서 특정 프로세스를 대신해 코드를 실행\r\n - 커널 공간의 인터럽트 컨텍스트에서 프로세스와 상관없이 인터럽트를 처리\r\n ex) 시스템 유휴상태 = 커널이 커널 모드의 프로세스 컨텍스트에서 idle 프로세스 실행     \r\n \r\n \r\n \r\n \r\n \r\n# 리눅스 커널과 전통적인 유닉스 커널\r\n\r\n* __리눅스는 유닉스와 유사, but 유닉스 아님__ : 유닉스 API(POSIX가 제정한 유일한 유닉스 표준) 구현하고 있지만 소스 물려받지 않음     \r\n\r\n\r\n\r\n리눅스에 __MMU__메모리 관리 장치 필요, 특펼히 없는 버전은 아주 작은 임베디드 시스템용  \r\n\r\n__유닉스 커널__ : 모놀리딕monolithic의 정적 바이너리  \r\n__리눅스 커널__ : 모놀리딕monolithic 커널이지만 마이크로 커널의 장점 수용\r\n - 모듈화 설계, 커널 선점(커널이 자신을 선점), 커널 스레드 지원, 별도의 바이너리(커널 모듈)를 커널 이미지에 동적으로 로드\r\n - 모든 작업은 커널 모드에서 실행, 통신 방식으로 X메세지 전달, O직접 함수 호출     \r\n \r\n*** \r\n \r\n__리눅스 커널 기준 전통적인 유닉스 시스템의 주요 차이점__\r\n - 커널 모듈 동적 로딩, 모노리딕 형식이지만 필요에 따라 동적으로 커널 코드 로드, 제거\r\n - 대칭형 멀티프로세서SMP 지원\r\n - 선점형 : 커널 내부에서 실행 중인 작업도 선점 가능\r\n - 독특한 방식으로 스레드 지원 : 정상 프로세스와 스레드 구분 안함/ 커널 입장에서 동등, but 자원 공유하는 프로세스들이 존재\r\n - 디바이스 클래스, 핫플러그 이벤트, 사용자 공간 디바이스 파일시스템sysfs => 객체지향적인 장치 모델 지원     \r\n \r\n \r\n \r\n \r\n \r\n \r\n# 리눅스 커널 버전\r\n\r\n(주버전).(부버전).(개정판).(안정 버전 일련번호)  \r\n부버전 짝수가 안정 커널\r\n \r\n \r\n\r\n","fields":{"slug":"/리눅스 커널 (1) - 리눅스 커널 입문/"},"frontmatter":{"title":"리눅스 커널 (1) - 리눅스 커널 입문","published":true}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":true}}}